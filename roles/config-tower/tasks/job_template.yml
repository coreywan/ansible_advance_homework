---
- name: Setup Credential Type
  tower_credential_type:
    tower_host: "tower1.{{ tower_GUID }}.example.opentlc.com"
    tower_username: "{{ user_name }}"
    tower_password: "{{ password }}"
    name: "{{ ct.name }}"
    description: "{{ ct.description | default(omit) }}"
    kind: "{{ ct.kind | default(omit) }}"
    inputs: "{{ ct.inputs | default(omit) }}"
    injectors: "{{ ct.injectors | default(omit) }}"
  loop: "{{ tower_credential_types }}"
  loop_control:
    label: ct
    loop_var: "{{ ct.name }}"

- name: Setup Credentials
  tower_credential:
    tower_host: "tower1.{{ tower_GUID }}.example.opentlc.com"
    tower_username: "{{ user_name }}"
    tower_password: "{{ password }}"
    name: "{{ cred.name }}"
    organization: "{{ cred.organization }}"
    kind: "{{ cred.kind }}"
    vault_password: "{{ cred.vault_password | default(omit) }}"
  loop_control:
    label: "{{ cred.name }}"
    loop_var: cred
  loop: "{{ tower_credentials }}"

- name: Setup Job Templates
  tower_job_template:
    tower_host: "tower1.{{ tower_GUID }}.example.opentlc.com"
    tower_username: "{{ user_name }}"
    tower_password: "{{ password }}"
    name: "{{ jt.name }}"
    project: "{{ jt.project }}"
    playbook: "{{ jt.playbook }}"
    credential: "{{ jt.credential | default(omit) }}"
    job_type: "{{ jt.job_type | default(omit) }}"
    vault_credential: "{{ jt.vault_credential | default(omit) }}"
    extra_vars_path: "{{ jt.extra_vars_path | default(omit) }}"
  loop_control:
    label: "{{ jt.name }}"
    loop_var: jt
  loop: "{{ tower_job_templates }}"

- name: Associate IG to job template
  command: |
    tower-cli job_template associate_ig \
      --job-template '{{ jt.name }}' \
      --instance-group '{{ jt.instance_group }}'
  loop_control:
    label: "{{ jt.name }}:{{ jt.instance_group }}"
    loop_var: jt
  loop: "{{ tower_job_templates | json_query('[?instance_group]') }}"
  # Filter to instance_group is defined
