- name: Setup Credentials
  tower_credential:
    tower_host: "tower1.{{ tower_GUID }}.example.opentlc.com"
    tower_username: "{{ user_name }}"
    tower_password: "{{ password }}"
    name: "{{ cred.name }}"
    organization: "{{ cred.organization }}"
    kind: "{{ cred.kind }}"
    vault_password: "{{ cred.vault_password | default(omit) }}"
  loop_control:
    label: "{{ cred.name }}"
    loop_var: cred
  loop:
    - name: yum-repo-cred
      organization: "{{ org_name }}"
      kind: vault
      vault_password: ansible

- name: Setup Job Templates
  tower_job_template:
    tower_host: "tower1.{{ tower_GUID }}.example.opentlc.com"
    tower_username: "{{ user_name }}"
    tower_password: "{{ password }}"
    name: "{{ jt.name }}"
    project: "{{ jt.project }}"
    playbook: "{{ jt.playbook }}"
    credential: "{{ jt.credential | default(omit) }}"
    job_type: "{{ jt.job_type | default(omit) }}"
    vault_credential: "{{ jt.vault_credential | default(omit) }}"
    extra_vars_path: "{{ jt.extra_vars_path | default(omit }}"
  loop_control:
    label: "{{ jt.name }}"
    loop_var: jt
  loop:
    - name: "{{job_template_name_osp_instances}}"
      job_type: run
      inventory: "{{ static_inventory_name}}"
      project: "{{ proj_name }}"
      playbook: "{{ osp_instances_playbook }}"
      credential: "{{ ssh_cred_name }}"
    - name: "{{ job_template_name_3tier_app }}"
      job_type: run
      inventory: "{{ static_inventory_name }}"
      project: "{{ proj_name }}"
      playbook: "{{ app_deploy_playbook }}"
      credential: "{{ ssh_cred_name }}"
      vault_credential: yum-repo-cred
    - name: "{{ job_template_name_osp_instances_delete }}"
      job_type: run
      inventory: "{{ static_inventory_name }}"
      project: "{{ proj_name }}"
      playbook: "{{ osp_instances_delete_playbook }}"
      credential: "{{ ssh_cred_name }}"
    - name: "{{job_template_smoke_osp}}"
      job_type: run
      inventory: "{{ static_inventory_name }}"
      project: "{{ proj_name }}"
      playbook: "{{ osp_smoke_playbook }}"
      credential: "{{ssh_cred_name}}"
    - name: "{{job_template_aws_provision}}"
      job_type: run
      inventory: "{{ static_inventory_name }}"
      project: "{{ proj_name }}"
      playbook: "{{aws_provision_playbook}}"
      credential: "{{ssh_cred_name}}"
      extra_vars_path: "/tmp/aws_jq_vars.yml"
    - name: "{{job_template_aws_ssh_keys}}"
      job_type: run
      inventory: "{{ static_inventory_name }}"
      project: "{{ proj_name }}"
      playbook: "{{ aws_ssh_playbook }}"
      credential: "{{opentlc_cred_name}}"
      extra_vars_path: "/tmp/tower_info.yml"

- name: Associate IG to OSP instances job template 
  command: |
    tower-cli job_template associate_ig --job-template "{{ job_template_name_osp_instances }}" --instance-group "{{instance_group_name}}"

- name: Associate IG to 3tier job template  
  command: |
    tower-cli job_template associate_ig --job-template "{{job_template_name_3tier_app}}" --instance-group "{{instance_group_name}}"

- name: Associate IG to OSP Delete instances job template 
  command: |
    tower-cli job_template associate_ig --job-template "{{job_template_name_osp_instances_delete}}" --instance-group "{{instance_group_name}}"

- name: Associate IG to Smoke test job template 
  command: |
    tower-cli job_template associate_ig --job-template "{{job_template_smoke_osp}}" --instance-group "{{instance_group_name}}"

- name: Job template for checking AWS instances status
  command: |
    tower-cli job_template create --name "{{job_template_aws_status_check}}" --job-type run --inventory "{{ec2_dynamic_inventory}}" --project "{{proj_name}}" --playbook "{{aws_status_playbook}}" --credential "{{opentlc_cred_name}}"

- name: Job template for 3tier AWS deploy
  command: |
    tower-cli job_template create --name "{{job_template_name_3tier_app_aws}}" --job-type run --inventory "{{ec2_dynamic_inventory}}" --project "{{proj_name}}" --playbook "{{app_deploy_playbook}}"  --vault-credential "yum-repo-cred"

- name: Job template for smoke test aws instances
  command: |
    tower-cli job_template create --name "{{job_template_smoke_aws}}" --job-type run --inventory "{{ec2_dynamic_inventory}}" --project "{{proj_name}}" --playbook "{{aws_smoke_app_playbook}}" --vault-credential "yum-repo-cred"
